{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eazhilamuthan\\\\Documents\\\\ReactProject\\\\e-com\\\\src\\\\Page\\\\Shoppage.jsx\";\nimport React from \"react\";\nimport CollectionOverview from \"../Components/Collections/collection.overview.jsx\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"./category/CollectionPage.jsx\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../Components/firebase/firebase-utils.js\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../react/shop/shop.action\";\nimport WithSpinner from \"../Components/Collections/with-spinner/with-spinner.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Page/Shoppage.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,0CAA1D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAOC,WAAP,MAAwB,yDAAxB;;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;KAAMQ,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAGN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAKnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzBkC;;AA2BlC;;AAED,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAC/BM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF0B,CAAL,CAAnC;;AAKJ,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAmChB,QAAnC,CAAf","sourcesContent":["import React from \"react\"\r\nimport CollectionOverview from \"../Components/Collections/collection.overview.jsx\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"./category/CollectionPage.jsx\";\r\nimport { firestore, convertCollectionsSnapshotToMap} from \"../Components/firebase/firebase-utils.js\";\r\nimport {connect} from \"react-redux\";\r\nimport { updateCollections } from \"../react/shop/shop.action\"\r\nimport WithSpinner from \"../Components/Collections/with-spinner/with-spinner.jsx\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n    unsubscribeFromSnapShot = null;\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({loading: false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const {loading} = this.state;\r\n        return (\r\n            <div>\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} /> }/>\r\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    };\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n        updateCollections: collectionsMap =>\r\n          dispatch(updateCollections(collectionsMap))\r\n      });\r\n\r\nexport default connect(null, mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}