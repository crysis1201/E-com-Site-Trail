{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../Components/firebase/firebase-utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.action\";\nexport function* signInWithUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n\n  ;\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield signInWithUserAuth(user);\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield signInWithUserAuth(user);\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n\n  ;\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/react/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,0BAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,0CAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,eAAjG;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,QAA7B,EAAuC;AAC1C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA4BM,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACLO,mBAAmB,CAAC;AAACS,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADd,CAAT;AAGA,GANJ,CAMK,OAAOC,KAAP,EAAc;AACf,UAAMlB,GAAG,CACLQ,mBAAmB,CAACU,KAAK,CAACC,OAAP,CADd,CAAT;AAGA;;AAAA;AAEP;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACjC,MAAG;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMjB,IAAI,CAACkB,eAAL,CAAqBjB,cAArB,CAArB;AACA,UAAMM,kBAAkB,CAACU,IAAD,CAAxB;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMlB,GAAG,CACLQ,mBAAmB,CAACU,KAAK,CAACC,OAAP,CADd,CAAT;AAGA;;AAAA;AACH;AAAA;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AACA,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMjB,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMf,kBAAkB,CAACU,IAAD,CAAxB;AACH,GAHD,CAGE,OAAOH,KAAP,EAAc;AACZ,UAAMlB,GAAG,CACLU,kBAAkB,CAACQ,KAAD,CADb,CAAT;AAGH;;AAAA;AACJ;AAAA;AAED,OAAO,UAAUU,mBAAV,GAAgC;AACnC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUS,QAAV,GAAqB;AACxB,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAAC0B,mBAAD,CAAL,EAA4B1B,IAAI,CAAC4B,kBAAD,CAAhC,CAAD,CAAT;AAEH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\r\n\r\nimport userActionTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from \"../../Components/firebase/firebase-utils\";\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.action\";\r\n\r\nexport function* signInWithUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\r\n        );\r\n       } catch (error) {\r\n        yield put(\r\n            googleSignInFailure(error.message)\r\n        );\r\n       };\r\n\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n   try{\r\n    const {user} = yield auth.signInWithPopup(googleProvider)\r\n    yield signInWithUserAuth(user)\r\n   } catch (error) {\r\n    yield put(\r\n        googleSignInFailure(error.message)\r\n    );\r\n   };\r\n};\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield signInWithUserAuth(user)\r\n    } catch (error) {\r\n        yield put(\r\n            emailSignInFailure(error)\r\n        );\r\n    };\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n};\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n\r\n};"]},"metadata":{},"sourceType":"module"}