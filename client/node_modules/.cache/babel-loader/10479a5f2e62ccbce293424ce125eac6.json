{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../Components/firebase/firebase-utils';\nimport { fetchCollectionSuccess, fetchCollectionsError } from './shop.action';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error.message));\n  }\n\n  ;\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/react/shop/shop.saga.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionsError","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,0CAHP;AAKA,SACEC,sBADF,EAEEC,qBAFF,QAGO,eAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BI,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACI,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,qBAAqB,CAACQ,KAAK,CAACC,OAAP,CAAtB,CAAT;AACD;;AAAA;AACF;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CAACQ,eAAe,CAACU,uBAAjB,EACVT,qBADU,CAAhB;AAED;AAAA;AAED,OAAO,UAAUU,QAAV,GAAoB;AACvB,QAAMhB,GAAG,CAAC,CACNF,IAAI,CAACgB,qBAAD,CADE,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../Components/firebase/firebase-utils';\r\n\r\nimport {\r\n  fetchCollectionSuccess,\r\n  fetchCollectionsError\r\n} from './shop.action';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollectionSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsError(error.message));\r\n  };\r\n};\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync);\r\n};\r\n\r\nexport function* shopSaga(){\r\n    yield(all([\r\n        call(fetchCollectionsStart)\r\n    ])\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}