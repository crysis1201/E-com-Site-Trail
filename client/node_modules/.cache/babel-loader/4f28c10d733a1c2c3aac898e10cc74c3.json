{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../Components/firebase/firebase-utils\";\nimport { signInFailure, signInSuccess } from \"./user.action\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n\n  ;\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)], call(isUserAuthenticated));\n}\n;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/react/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,0BAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,0CAAhF;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLS,aAAa,CAAC;AAACM,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADR,CAAT;AAGA,GANJ,CAMK,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CACLQ,aAAa,CAACS,KAAK,CAACC,OAAP,CADR,CAAT;AAGA;;AAAA;AACP;AAAA;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACjC,MAAG;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMhB,IAAI,CAACiB,eAAL,CAAqBhB,cAArB,CAArB;AACA,UAAMK,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMjB,GAAG,CACLQ,aAAa,CAACS,KAAK,CAACC,OAAP,CADR,CAAT;AAGA;;AAAA;AACH;AAAA;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AACA,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMhB,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOH,KAAP,EAAc;AACZ,UAAMjB,GAAG,CACLQ,aAAa,CAACS,KAAD,CADR,CAAT;AAGH;;AAAA;AACJ;AAAA;AAED,OAAO,UAAUU,mBAAV,GAAgC;AACnC,MAAI;AACF,UAAMhB,QAAQ,GAAG,MAAMJ,cAAc,EAArC;AACA,QAAI,CAACI,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAEH,OAAO,UAAUW,mBAAV,GAAgC;AACnC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAMjC,UAAU,CAACI,eAAe,CAAC8B,kBAAjB,EAAqCN,mBAArC,CAAhB;AACH;AAAA;AAGD,OAAO,UAAUO,QAAV,GAAqB;AACxB,QAAMjC,GAAG,CACL,CAACC,IAAI,CAAC0B,mBAAD,CAAL,EACA1B,IAAI,CAAC4B,kBAAD,CADJ,CADK,EAGL5B,IAAI,CAACyB,mBAAD,CAHC,CAAT;AAKH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\r\n\r\nimport userActionTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../Components/firebase/firebase-utils\";\r\nimport { signInFailure, signInSuccess } from \"./user.action\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\r\n        );\r\n       } catch (error) {\r\n        yield put(\r\n            signInFailure(error.message)\r\n        );\r\n       };\r\n};\r\n\r\nexport function* signInWithGoogle() {\r\n   try{\r\n    const {user} = yield auth.signInWithPopup(googleProvider)\r\n    yield getSnapshotFromUserAuth(user)\r\n   } catch (error) {\r\n    yield put(\r\n        signInFailure(error.message)\r\n    );\r\n   };\r\n};\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(\r\n            signInFailure(error)\r\n        );\r\n    };\r\n};\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n      const userAuth = yield getCurrentUser();\r\n      if (!userAuth) return;\r\n      yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n};\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n};\r\n\r\n\r\nexport function* userSaga() {\r\n    yield all(\r\n        [call(onGoogleSignInStart), \r\n        call(onEmailSignInStart)], \r\n        call(isUserAuthenticated),)\r\n\r\n};"]},"metadata":{},"sourceType":"module"}