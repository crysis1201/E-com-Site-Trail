{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eazhilamuthan\\\\Documents\\\\ReactProject\\\\e-com\\\\src\\\\Components\\\\SignIn\\\\signUp\\\\sign-up.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport FormInput from \"../../form-Input/Form-Input\";\nimport CustomButton from \"../../CustomButton/CustomButton\";\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from \"../../../react/user/user.action\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectError, selectUserLogedIn } from \"../../../react/user/user.selectors\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart,\n  message,\n  error\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pt-3\",\n      children: message\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this) : [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pt-3\",\n      children: error\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"pv5tcCnLYRqO6NoADe61jYuOOnk=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  message: selectUserLogedIn\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Components/SignIn/signUp/sign-up.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","createStructuredSelector","selectError","selectUserLogedIn","useState","SignUp","message","error","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport FormInput from \"../../form-Input/Form-Input\"\r\nimport CustomButton from \"../../CustomButton/CustomButton\";\r\nimport \"./sign-up.styles.scss\"\r\nimport { signUpStart } from \"../../../react/user/user.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectError, selectUserLogedIn } from \"../../../react/user/user.selectors\";\r\nimport { useState } from \"react\";\r\n\r\nconst SignUp = ({ signUpStart, message, error }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    });\r\n  \r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n  \r\n    const handleSubmit = async event => {\r\n      event.preventDefault();\r\n  \r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n  \r\n      signUpStart({ displayName, email, password });\r\n    };\r\n  \r\n    const handleChange = event => {\r\n      const { name, value } = event.target;\r\n  \r\n      setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n    return(\r\n        <div className=\"sign-up\">\r\n            <h2>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                type='text'\r\n                name='displayName'\r\n                value={displayName}\r\n                onChange={handleChange}\r\n                label='Display Name'\r\n                required\r\n                />\r\n                <FormInput\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                label='Email'\r\n                required\r\n                />\r\n                <FormInput\r\n                type='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                label='Password'\r\n                required\r\n                />\r\n                <FormInput\r\n                type='password'\r\n                name='confirmPassword'\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                label='Confirm Password'\r\n                required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n            {\r\n                message ? \r\n                (<p key={1} className=\"pt-3\">{message}</p>) : \r\n                ([<p key={2} className=\"pt-3\">{error}</p>])\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n });\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    error: selectError,\r\n    message: selectUserLogedIn\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}