{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eazhilamuthan\\\\Documents\\\\ReactProject\\\\e-com\\\\src\\\\Components\\\\Collections\\\\with-spinner\\\\with-spinner.jsx\";\nimport React from \"react\";\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({\n    isLoading,\n    ...otherprops\n  }) => {\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherprops\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  };\n\n  return Spinner;\n};\n\n_c = WithSpinner;\nexport default WithSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSpinner\");","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Components/Collections/with-spinner/with-spinner.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","Spinner","isLoading","otherprops"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI;AAEpC,QAAMC,OAAO,GAAG,CAAC;AAACC,IAAAA,SAAD;AAAY,OAAGC;AAAf,GAAD,KAAgC;AAEhD,WAAOD,SAAS,gBACZ,QAAC,cAAD;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADY,gBAKX,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YALL;AAOC,GATD;;AAUA,SAAOF,OAAP;AACH,CAbD;;KAAMF,W;AAeN,eAAeA,WAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\"\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n\r\n    const Spinner = ({isLoading, ...otherprops}) => {\r\n\r\n    return isLoading ? ( \r\n        <SpinnerOverlay>\r\n            <SpinnerContainer />\r\n        </SpinnerOverlay>\r\n     ) : (\r\n         <WrappedComponent {...otherprops} />\r\n     );\r\n    };\r\n    return Spinner;\r\n}\r\n \r\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}