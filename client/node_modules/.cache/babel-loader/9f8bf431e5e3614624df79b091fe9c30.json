{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst Config = {\n  apiKey: \"AIzaSyCdp5iok0u2cy9gD7OCeU8ADpTv_KlSWyg\",\n  authDomain: \"e-com-d35c1.firebaseapp.com\",\n  projectId: \"e-com-d35c1\",\n  storageBucket: \"e-com-d35c1.appspot.com\",\n  messagingSenderId: \"609934601013\",\n  appId: \"1:609934601013:web:58ce83a6dfd9e5625f3a7c\",\n  measurementId: \"G-JRXS6WGDS8\"\n};\nfirebase.initializeApp(Config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const setDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        setDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Components/firebase/firebase-utils.js"],"names":["firebase","Config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","displayName","email","setDate","Date","set","error","console","log","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACNC,EAAAA,MAAM,EAAE,yCADF;AAENC,EAAAA,UAAU,EAAE,6BAFN;AAGNC,EAAAA,SAAS,EAAE,aAHL;AAINC,EAAAA,aAAa,EAAE,yBAJT;AAKNC,EAAAA,iBAAiB,EAAE,cALb;AAMNC,EAAAA,KAAK,EAAE,2CAND;AAONC,EAAAA,aAAa,EAAE;AAPT,CAAd;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACrE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,QAAOH,QAAQ,CAACI,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACtB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBT,QAA7B;AACA,UAAMU,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AAGA,QAAG;AACK,YAAMT,OAAO,CAACU,GAAR,CAAY;AACVJ,QAAAA,WADU;AAEVC,QAAAA,KAFU;AAGVC,QAAAA,OAHU;AAIV,WAAGT;AAJO,OAAZ,CAAN;AAOP,KARD,CASA,OAAMY,KAAN,EAAY;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACP;AAAC;AACT,CAvBM;AAyBP,MAAMC,QAAQ,GAAG,IAAI9B,QAAQ,CAACU,IAAT,CAAcqB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMxB,IAAI,CAACyB,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nconst Config ={\r\n        apiKey: \"AIzaSyCdp5iok0u2cy9gD7OCeU8ADpTv_KlSWyg\",\r\n        authDomain: \"e-com-d35c1.firebaseapp.com\",\r\n        projectId: \"e-com-d35c1\",\r\n        storageBucket: \"e-com-d35c1.appspot.com\",\r\n        messagingSenderId: \"609934601013\",\r\n        appId: \"1:609934601013:web:58ce83a6dfd9e5625f3a7c\",\r\n        measurementId: \"G-JRXS6WGDS8\"\r\n};\r\n\r\nfirebase.initializeApp(Config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n        if (!userAuth) return;\r\n        const userRef = firestore.doc(`users${userAuth.uid}`)\r\n\r\n        const snapshot = await userRef.get()\r\n\r\n        if (!snapshot.exists) {\r\n        const {displayName, email} = userAuth;\r\n        const setDate = new Date();\r\n\r\n\r\n        try{\r\n                await userRef.set({\r\n                        displayName,\r\n                        email,\r\n                        setDate,\r\n                        ...additionalData\r\n                })\r\n\r\n        }\r\n        catch(error){\r\n                console.log('error creating user', error.message)\r\n        }}\r\n}\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}