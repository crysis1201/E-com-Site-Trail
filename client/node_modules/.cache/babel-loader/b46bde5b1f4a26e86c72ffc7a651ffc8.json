{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../Components/firebase/firebase-utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.action\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n\n  ;\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignUpstart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpstart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/react/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signUp","payload","displayName","email","password","user","createUserWithEmailAndPassword","additionalData","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","signOut","onSignUpstart","SIGN_UP_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\r\n\r\nimport userActionTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../Components/firebase/firebase-utils\";\r\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.action\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\r\n        );\r\n       } catch (error) {\r\n        yield put(\r\n            signInFailure(error.message)\r\n        );\r\n       };\r\n};\r\n\r\nexport function* signUp({payload: {displayName, email, password}}) {\r\n    try{\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield put(\r\n            signUpSuccess({user, additionalData: {displayName}})\r\n        );\r\n    }\r\n    catch (error) {\r\n        yield(put(\r\n            signUpFailure(error.message)\r\n        ))\r\n    };\r\n};\r\n\r\nexport function* signInWithGoogle() {\r\n   try{\r\n    const {user} = yield auth.signInWithPopup(googleProvider)\r\n    yield getSnapshotFromUserAuth(user)\r\n   } catch (error) {\r\n    yield put(\r\n        signInFailure(error.message)\r\n    );\r\n   };\r\n};\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(\r\n            signInFailure(error)\r\n        );\r\n    };\r\n};\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n      const userAuth = yield getCurrentUser();\r\n      if (!userAuth) return;\r\n      yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    } catch (error) {\r\n        yield put(\r\n            signOutFailure(error)\r\n        )\r\n    }\r\n}\r\n\r\nexport function* onSignUpstart() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n};\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n};\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\n\r\nexport function* userSaga() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpstart)\r\n    ]);\r\n};"]},"metadata":{},"sourceType":"module"}