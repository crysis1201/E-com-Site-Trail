{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from \"../../Components/firebase/firebase-utils\";\nimport { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport shopActionTypes from \"./shop.types\";\nimport { fetchCollectionSuccess, fetchCollectionsError } from \"./shop.action\";\nexport function* fetchCollectionsStartAsync() {\n  const collectionRef = firestore.collection('collections');\n\n  try {\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    put(fetchCollectionsError(error));\n  }\n\n  ;\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\n;","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/react/shop/shop.saga.js"],"names":["firestore","convertCollectionsSnapshotToMap","takeEvery","call","put","shopActionTypes","fetchCollectionSuccess","fetchCollectionsError","fetchCollectionsStartAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,+BAApB,QAA2D,0CAA3D;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,eAA9D;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC1C,QAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMV,IAAI,CAACF,+BAAD,EAAkCU,QAAlC,CAAjC;AACA,UAAMP,GAAG,CAACE,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZV,IAAAA,GAAG,CAACG,qBAAqB,CAACO,KAAD,CAAtB,CAAH;AACH;;AAAA;AACJ;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMb,SAAS,CACXG,eAAe,CAACW,uBADL,EAEXR,0BAFW,CAAf;AAIH;AAAA","sourcesContent":["import { firestore, convertCollectionsSnapshotToMap } from \"../../Components/firebase/firebase-utils\";\r\nimport {takeEvery, call, put } from \"@redux-saga/core/effects\";\r\nimport shopActionTypes from \"./shop.types\";\r\nimport { fetchCollectionSuccess, fetchCollectionsError } from \"./shop.action\"\r\n\r\nexport function* fetchCollectionsStartAsync() {\r\n    const collectionRef = firestore.collection('collections');\r\n    try {\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionSuccess(collectionsMap))\r\n    } catch (error) {\r\n        put(fetchCollectionsError(error))\r\n    };\r\n};\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery (\r\n        shopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsStartAsync\r\n    )\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}