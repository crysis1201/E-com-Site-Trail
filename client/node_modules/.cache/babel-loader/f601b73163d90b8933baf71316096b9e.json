{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eazhilamuthan\\\\Documents\\\\ReactProject\\\\e-com\\\\src\\\\Components\\\\SignIn\\\\signUp\\\\sign-up.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport FormInput from \"../../form-Input/Form-Input\";\nimport CustomButton from \"../../CustomButton/CustomButton\";\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from \"../../../react/user/user.action\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectError, selectUserLogedIn } from \"../../../react/user/user.selectors\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart,\n  error,\n  message\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('password did not match');\n      return;\n    }\n\n    ;\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }, this) : [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pt-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 47\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"j5xZZnaU7eCMtsI9FVj1h4D6E1c=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCreditional => dispatch(signUpStart(userCreditional))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  message: selectUserLogedIn\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Components/SignIn/signUp/sign-up.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","createStructuredSelector","selectError","selectUserLogedIn","useState","SignUp","error","message","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCreditional","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport FormInput from \"../../form-Input/Form-Input\"\r\nimport CustomButton from \"../../CustomButton/CustomButton\";\r\nimport \"./sign-up.styles.scss\"\r\nimport { signUpStart } from \"../../../react/user/user.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectError, selectUserLogedIn } from \"../../../react/user/user.selectors\";\r\nimport { useState } from \"react\";\r\n\r\nconst SignUp = ({signUpStart, error, message}) => {\r\n    const [userCredentials, setUserCredentials] = useState(\r\n        {\r\n            displayName: \"\", \r\n            email: \"\", \r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        if(password !== confirmPassword ) {\r\n            alert('password did not match');\r\n            return; \r\n        };\r\n        signUpStart({displayName, email, password});\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target \r\n\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n    };\r\n\r\n    return(\r\n        <div className=\"sign-up\">\r\n            <h2>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit} >\r\n                <FormInput \r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label='Email'\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label=\"Password\"\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label='Confirm Password'\r\n                    required\r\n                />\r\n                \r\n                <CustomButton type=\"submit\">Sign Up</CustomButton>\r\n            </form>\r\n            {\r\n                message ? <p>{message}</p> : [<p className=\"pt-3\">{error}</p>]\r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCreditional => dispatch(signUpStart(userCreditional))\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    error: selectError,\r\n    message: selectUserLogedIn\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}