{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eazhilamuthan\\\\Documents\\\\ReactProject\\\\e-com\\\\src\\\\Components\\\\SignIn\\\\Sign-in.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport FormInput from \"../form-Input/Form-Input\";\nimport { emailSignInStart, googleSignInStart } from \"../../react/user/user.action\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentails, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentails;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setCredentials({ ...userCredentails,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl pb-5 pt-5 text-left\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-left\",\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        label: \"email\",\n        value: email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: [' ', \"Sign In With Google \", '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"SFZuEQm61LOTj2yr/mxFt3B2ndo=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Eazhilamuthan/Documents/ReactProject/e-com/src/Components/SignIn/Sign-in.jsx"],"names":["React","CustomButton","FormInput","emailSignInStart","googleSignInStart","connect","useState","SignIn","userCredentails","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport FormInput from \"../form-Input/Form-Input\";\r\nimport { emailSignInStart, googleSignInStart } from \"../../react/user/user.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n\r\n  const [userCredentails, setCredentials] = useState({email: '', password: ''});\r\n  const {email, password} = userCredentails;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n      const {name, value} = event.target;\r\n      this.setCredentials({...userCredentails, [name]: value});\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-1/2\" >\r\n      <h2 className=\"text-2xl pb-5 pt-5 text-left\">I already have an account</h2>\r\n      <p className=\"text-left\">Sign in with your email and password</p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput \r\n          name=\"email\" \r\n          type=\"email\"\r\n          handleChange={handleChange}\r\n          label=\"email\"\r\n          value={email} required />\r\n\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label=\"password\"\r\n          required\r\n        />\r\n        <div className=\"flex justify-between\">\r\n          <CustomButton type=\"submit\">Sign In</CustomButton>\r\n          <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>{' '}Sign In With Google {''}</CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(\r\n  null, \r\n  mapDispatchToProps)\r\n  (SignIn);"]},"metadata":{},"sourceType":"module"}